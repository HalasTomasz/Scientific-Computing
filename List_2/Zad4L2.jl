#Autor Tomasz Ha≈Ças

using Polynomials
using LinearAlgebra

p1=[1, -210.0, 20615.0,-1256850.0,
      53327946.0,-1672280820.0, 40171771630.0, -756111184500.0,          
      11310276995381.0, -135585182899530.0,
      1307535010540395.0,     -10142299865511450.0,
      63030812099294896.0,     -311333643161390640.0,
      1206647803780373360.0,     -3599979517947607200.0,
      8037811822645051776.0,      -12870931245150988800.0,
      13803759753640704000.0,      -8752948036761600000.0,
      2432902008176640000.0]

p2=[1, -210.0-2.0^(-23), 20615.0,-1256850.0,
      53327946.0,-1672280820.0, 40171771630.0, -756111184500.0,          
      11310276995381.0, -135585182899530.0,
      1307535010540395.0,     -10142299865511450.0,
      63030812099294896.0,     -311333643161390640.0,
      1206647803780373360.0,     -3599979517947607200.0,
      8037811822645051776.0,      -12870931245150988800.0,
      13803759753640704000.0,      -8752948036761600000.0,
      2432902008176640000.0]


function calculate_roots(p)
    polly = Polynomial(reverse(p))
    p_roots = Polynomials.PolyCompat.poly(collect(Float64,1.0:20.0))
    my_roots = roots(polly)
  
    for i in 1:20
        P_zk = abs(polly(my_roots[i]))
        p_zk = abs(p_roots(my_roots[i]))
        minus = abs(my_roots[i] - i)

      println("$(my_roots[i])  &  $i  &  $P_zk  &  $p_zk  &  $minus")
      println("\\hline")
    end
end

calculate_roots(p1)

calculate_roots(p2)
